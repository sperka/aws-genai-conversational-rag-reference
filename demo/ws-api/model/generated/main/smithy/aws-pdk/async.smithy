// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

$version: "2"

metadata validators = [

    {
        id: "MissingAsyncTrait"
        name: "EmitEachSelector"
        message: "Operation is missing @async trait"
        configuration: {
            selector: """
                operation :not([trait|com.amazon#async])
            """
        }
    }

    {
        id: "MissingWebSocketProtocolTrait"
        name: "EmitEachSelector"
        message: "Service is missing @websocketJson trait"
        configuration: {
            selector: """
                service :not([trait|com.amazon#websocketJson])
            """
        }
    }

    {
        id: "OperationMayNotHaveOutput"
        name: "EmitEachSelector"
        message: "Async operations must have no output"
        configuration: {
            selector: """
                operation -[output]->
            """
        }
    }

    {
        id: "OperationMustHaveInput"
        name: "EmitEachSelector"
        message: "Async operations must define an input"
        configuration: {
            selector: """
                operation :not(-[input]->)
            """
        }
    }

    {
        id: "HandlerTraitNotPermittedForServerToClient"
        name: "EmitEachSelector"
        message: "The @handler trait cannot be applied to an @async operation with direction server_to_client"
        configuration: {
            selector: """
              operation
              [@trait|com.amazon#async: @{direction} = server_to_client]
              [trait|com.amazon#handler]
            """
        }
    }

    
    {
      id: "SupportedLanguage_connectHandler"
      name: "EmitEachSelector"
      configuration: {
          bindToTrait: com.amazon#connectHandler
          selector: """
              :not([@trait|com.amazon#connectHandler: @{language} = typescript, java, python])
          """
          messageTemplate: """
              @{trait|com.amazon#connectHandler|language} is not supported by type-safe-api.
              Supported languages are "typescript", "java" and "python".
          """
      }
    }
    
    {
      id: "ConfiguredHandlerProject_connectHandler"
      name: "EmitEachSelector"
      configuration: {
          bindToTrait: com.amazon#connectHandler
          selector: """
              [@trait|com.amazon#connectHandler: @{language} = typescript, java, python]
              :not([@trait|com.amazon#connectHandler: @{language} = typescript])
          """
          messageTemplate: """
              @@handler language @{trait|com.amazon#connectHandler|language} cannot be referenced unless a handler project is configured for this language.
              Configured handler project languages are: typescript.
              You can add this language by configuring TypeSafeApiProject in your .projenrc
          """
      }
    }
    
    {
      id: "SupportedLanguage_disconnectHandler"
      name: "EmitEachSelector"
      configuration: {
          bindToTrait: com.amazon#disconnectHandler
          selector: """
              :not([@trait|com.amazon#disconnectHandler: @{language} = typescript, java, python])
          """
          messageTemplate: """
              @{trait|com.amazon#disconnectHandler|language} is not supported by type-safe-api.
              Supported languages are "typescript", "java" and "python".
          """
      }
    }
    
    {
      id: "ConfiguredHandlerProject_disconnectHandler"
      name: "EmitEachSelector"
      configuration: {
          bindToTrait: com.amazon#disconnectHandler
          selector: """
              [@trait|com.amazon#disconnectHandler: @{language} = typescript, java, python]
              :not([@trait|com.amazon#disconnectHandler: @{language} = typescript])
          """
          messageTemplate: """
              @@handler language @{trait|com.amazon#disconnectHandler|language} cannot be referenced unless a handler project is configured for this language.
              Configured handler project languages are: typescript.
              You can add this language by configuring TypeSafeApiProject in your .projenrc
          """
      }
    }
]

namespace com.amazon

/// Add this trait to an asynchronous service
@trait(selector: "service")
structure websocketJson {}

enum AsyncDirection {
    CLIENT_TO_SERVER = "client_to_server"
    SERVER_TO_CLIENT = "server_to_client"
    BIDIRECTIONAL = "bidirectional"
}

/// Add this trait to all asynchronous operations
@trait(selector: "operation")
structure async {
    /// The direction this operation will be used in, used to inform the generated client and server sdks.
    @required
    direction: AsyncDirection
}

@trait(selector: "service")
structure connectHandler {
  @required
  language: String
}

@trait(selector: "service")
structure disconnectHandler {
  @required
  language: String
}

